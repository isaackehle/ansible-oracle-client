---

#  - fail: msg="Please define local client_pkg_dir variable"
#    when: client_pkg_dir == ""

- name: Gather Facts now that the server can be reached
  setup:
  when: ansible_host != 'localhost'

- debug: var={{ item }}
  with_items:
    - ansible_distribution
    - ansible_architecture
    - ansible_system

- set_fact: system_config={{ system_configs[ansible_distribution] }}
- set_fact: arch={{ arch_folders[ansible_architecture] }}

- debug: var={{ item }}
  with_items:
    - system_config
    - arch

- fail: msg=Variable '{{ item }}' was not properly defined
  when:
    - item is undefined or item == ""
  with_items:
    - system_config
    - arch

- set_fact: version={{ system_config.version }}
  when: version is undefined or version == ""

- set_fact: version_cfg={{ version_configs[system_config.system][version] }}
- debug: var=version_cfg

- set_fact:
    filenames: []

- set_fact:
    filenames: "{{ filenames }} + [ 'instantclient-{{ item }}-{{system_config.system}}.{{arch}}-{{version_cfg.zip_suffix}}.zip' ]"
  with_items: "{{ packages }}"

- debug: var=filenames

- set_fact: incl_type=local
  when: ansible_host == 'localhost'

- name: Ensure packages are installed
  apt:
    name: [ 'zip', 'unzip', 'gzip', 'libaio1' ]
    state: present
  become: true
  when: system_config.system == "linux"

- set_fact:
    libtype:          "{{ lib_types[system_config.system] }}"
    lib_path:         "{{ lib_paths[system_config.system] }}"
    client_path:      "{{ client_pkg_dir | regex_replace( '/$', '' ) }}/{{ system_config.system }}/{{ arch }}"
    unzip_path:       "instantclient_{{ version_cfg.lib }}"

- stat: path={{ client_path }}
  connection: local
  register: p


- debug: var={{ item }}
  with_items:
    - unzip_path
    - client_path
    - p
    - incl_type


- fail: msg="client_path does not exist. Make sure client_pkg_dir is set properly."
  when: (p.stat.exists is defined and p.stat.exists|bool == false)

- fail: msg="Path exists and is a directory"
  when: (p.stat.isdir is undefined or p.stat.isdir|bool == false)

- include_tasks: client.{{ incl_type }}.yml
